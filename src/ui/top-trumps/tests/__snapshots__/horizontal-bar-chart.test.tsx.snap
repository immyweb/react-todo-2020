// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ChartHorizontalBar /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ChartHorizontalBar
    data={
      Array [
        Object {
          "imageThumb": "handsome.jpg",
          "noVoteCount": 0,
          "player": "Cameron Small",
          "voteCount": 50,
          "votePercent": 80,
        },
        Object {
          "imageThumb": "hot.jpg",
          "noVoteCount": 0,
          "player": "Laura Kingston",
          "voteCount": 10,
          "votePercent": 10,
        },
        Object {
          "imageThumb": "ironman.gif",
          "noVoteCount": 0,
          "player": "Maramead",
          "voteCount": 11,
          "votePercent": 10,
        },
      ]
    }
    theme={
      Object {
        "primary": "#ffffff",
        "secondary": "#000000",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <BarChart
        barCategoryGap="10%"
        barGap={10}
        data={
          Array [
            Object {
              "imageThumb": "handsome.jpg",
              "noVoteCount": 0,
              "player": "Cameron Small",
              "voteCount": 50,
              "votePercent": 80,
            },
            Object {
              "imageThumb": "hot.jpg",
              "noVoteCount": 0,
              "player": "Laura Kingston",
              "voteCount": 10,
              "votePercent": 10,
            },
            Object {
              "imageThumb": "ironman.gif",
              "noVoteCount": 0,
              "player": "Maramead",
              "voteCount": 11,
              "votePercent": 10,
            },
          ]
        }
        layout="vertical"
        margin={
          Object {
            "left": -5,
          }
        }
        reverseStackOrder={false}
        stackOffset="none"
      >
        <XAxis
          allowDataOverflow={false}
          allowDecimals={true}
          allowDuplicatedCategory={true}
          axisLine={false}
          domain={
            Array [
              0,
              100,
            ]
          }
          height={30}
          hide={true}
          mirror={false}
          orientation="bottom"
          padding={
            Object {
              "left": 0,
              "right": 0,
            }
          }
          reversed={false}
          scale="auto"
          tickCount={5}
          type="number"
          width={0}
          xAxisId={0}
        />
        <YAxis
          allowDataOverflow={false}
          allowDecimals={true}
          allowDuplicatedCategory={true}
          dataKey="player"
          domain={
            Array [
              0,
              "auto",
            ]
          }
          height={0}
          hide={true}
          mirror={false}
          orientation="left"
          padding={
            Object {
              "bottom": 0,
              "top": 0,
            }
          }
          reversed={false}
          scale="auto"
          tickCount={5}
          type="category"
          width={60}
          yAxisId={0}
        />
        <Bar
          animationBegin={0}
          animationDuration={400}
          animationEasing="ease"
          background={
            Object {
              "fill": "#adafb0",
              "fillOpacity": 0.4,
            }
          }
          barSize={-10}
          data={Array []}
          dataKey="votePercentage"
          hide={false}
          isAnimationActive={true}
          layout="vertical"
          legendType="rect"
          minPointSize={0}
          onAnimationEnd={[Function]}
          onAnimationStart={[Function]}
          xAxisId={0}
          yAxisId={0}
        >
          <LabelList
            content={[Function]}
            dataKey="votePercentage"
            position="insideRight"
            valueAccessor={[Function]}
          />
          <LabelList
            content={[Function]}
            dataKey="player"
            position="insideRight"
            valueAccessor={[Function]}
          />
          <LabelList
            content={[Function]}
            dataKey="imageThumb"
            position="left"
            valueAccessor={[Function]}
          />
          <Cell
            fill="#000000"
          />
          <Cell
            fill="#000000"
          />
          <Cell
            fill="#000000"
          />
        </Bar>
      </BarChart>,
      "debounce": 0,
      "height": "100%",
      "width": "100%",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "barCategoryGap": "10%",
        "barGap": 10,
        "children": Array [
          <XAxis
            allowDataOverflow={false}
            allowDecimals={true}
            allowDuplicatedCategory={true}
            axisLine={false}
            domain={
              Array [
                0,
                100,
              ]
            }
            height={30}
            hide={true}
            mirror={false}
            orientation="bottom"
            padding={
              Object {
                "left": 0,
                "right": 0,
              }
            }
            reversed={false}
            scale="auto"
            tickCount={5}
            type="number"
            width={0}
            xAxisId={0}
          />,
          <YAxis
            allowDataOverflow={false}
            allowDecimals={true}
            allowDuplicatedCategory={true}
            dataKey="player"
            domain={
              Array [
                0,
                "auto",
              ]
            }
            height={0}
            hide={true}
            mirror={false}
            orientation="left"
            padding={
              Object {
                "bottom": 0,
                "top": 0,
              }
            }
            reversed={false}
            scale="auto"
            tickCount={5}
            type="category"
            width={60}
            yAxisId={0}
          />,
          <Bar
            animationBegin={0}
            animationDuration={400}
            animationEasing="ease"
            background={
              Object {
                "fill": "#adafb0",
                "fillOpacity": 0.4,
              }
            }
            barSize={-10}
            data={Array []}
            dataKey="votePercentage"
            hide={false}
            isAnimationActive={true}
            layout="vertical"
            legendType="rect"
            minPointSize={0}
            onAnimationEnd={[Function]}
            onAnimationStart={[Function]}
            xAxisId={0}
            yAxisId={0}
          >
            <LabelList
              content={[Function]}
              dataKey="votePercentage"
              position="insideRight"
              valueAccessor={[Function]}
            />
            <LabelList
              content={[Function]}
              dataKey="player"
              position="insideRight"
              valueAccessor={[Function]}
            />
            <LabelList
              content={[Function]}
              dataKey="imageThumb"
              position="left"
              valueAccessor={[Function]}
            />
            <Cell
              fill="#000000"
            />
            <Cell
              fill="#000000"
            />
            <Cell
              fill="#000000"
            />
          </Bar>,
        ],
        "data": Array [
          Object {
            "imageThumb": "handsome.jpg",
            "noVoteCount": 0,
            "player": "Cameron Small",
            "voteCount": 50,
            "votePercent": 80,
          },
          Object {
            "imageThumb": "hot.jpg",
            "noVoteCount": 0,
            "player": "Laura Kingston",
            "voteCount": 10,
            "votePercent": 10,
          },
          Object {
            "imageThumb": "ironman.gif",
            "noVoteCount": 0,
            "player": "Maramead",
            "voteCount": 11,
            "votePercent": 10,
          },
        ],
        "layout": "vertical",
        "margin": Object {
          "left": -5,
        },
        "reverseStackOrder": false,
        "stackOffset": "none",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "allowDataOverflow": false,
            "allowDecimals": true,
            "allowDuplicatedCategory": true,
            "axisLine": false,
            "domain": Array [
              0,
              100,
            ],
            "height": 30,
            "hide": true,
            "mirror": false,
            "orientation": "bottom",
            "padding": Object {
              "left": 0,
              "right": 0,
            },
            "reversed": false,
            "scale": "auto",
            "tickCount": 5,
            "type": "number",
            "width": 0,
            "xAxisId": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "allowDataOverflow": false,
            "allowDecimals": true,
            "allowDuplicatedCategory": true,
            "dataKey": "player",
            "domain": Array [
              0,
              "auto",
            ],
            "height": 0,
            "hide": true,
            "mirror": false,
            "orientation": "left",
            "padding": Object {
              "bottom": 0,
              "top": 0,
            },
            "reversed": false,
            "scale": "auto",
            "tickCount": 5,
            "type": "category",
            "width": 60,
            "yAxisId": 0,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "animationBegin": 0,
            "animationDuration": 400,
            "animationEasing": "ease",
            "background": Object {
              "fill": "#adafb0",
              "fillOpacity": 0.4,
            },
            "barSize": -10,
            "children": Array [
              <LabelList
                content={[Function]}
                dataKey="votePercentage"
                position="insideRight"
                valueAccessor={[Function]}
              />,
              <LabelList
                content={[Function]}
                dataKey="player"
                position="insideRight"
                valueAccessor={[Function]}
              />,
              <LabelList
                content={[Function]}
                dataKey="imageThumb"
                position="left"
                valueAccessor={[Function]}
              />,
              Array [
                <Cell
                  fill="#000000"
                />,
                <Cell
                  fill="#000000"
                />,
                <Cell
                  fill="#000000"
                />,
              ],
            ],
            "data": Array [],
            "dataKey": "votePercentage",
            "hide": false,
            "isAnimationActive": true,
            "layout": "vertical",
            "legendType": "rect",
            "minPointSize": 0,
            "onAnimationEnd": [Function],
            "onAnimationStart": [Function],
            "xAxisId": 0,
            "yAxisId": 0,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "content": [Function],
                "dataKey": "votePercentage",
                "position": "insideRight",
                "valueAccessor": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "content": [Function],
                "dataKey": "player",
                "position": "insideRight",
                "valueAccessor": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "content": [Function],
                "dataKey": "imageThumb",
                "position": "left",
                "valueAccessor": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "function",
              "props": Object {
                "fill": "#000000",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "function",
              "props": Object {
                "fill": "#000000",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "function",
              "props": Object {
                "fill": "#000000",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <BarChart
          barCategoryGap="10%"
          barGap={10}
          data={
            Array [
              Object {
                "imageThumb": "handsome.jpg",
                "noVoteCount": 0,
                "player": "Cameron Small",
                "voteCount": 50,
                "votePercent": 80,
              },
              Object {
                "imageThumb": "hot.jpg",
                "noVoteCount": 0,
                "player": "Laura Kingston",
                "voteCount": 10,
                "votePercent": 10,
              },
              Object {
                "imageThumb": "ironman.gif",
                "noVoteCount": 0,
                "player": "Maramead",
                "voteCount": 11,
                "votePercent": 10,
              },
            ]
          }
          layout="vertical"
          margin={
            Object {
              "left": -5,
            }
          }
          reverseStackOrder={false}
          stackOffset="none"
        >
          <XAxis
            allowDataOverflow={false}
            allowDecimals={true}
            allowDuplicatedCategory={true}
            axisLine={false}
            domain={
              Array [
                0,
                100,
              ]
            }
            height={30}
            hide={true}
            mirror={false}
            orientation="bottom"
            padding={
              Object {
                "left": 0,
                "right": 0,
              }
            }
            reversed={false}
            scale="auto"
            tickCount={5}
            type="number"
            width={0}
            xAxisId={0}
          />
          <YAxis
            allowDataOverflow={false}
            allowDecimals={true}
            allowDuplicatedCategory={true}
            dataKey="player"
            domain={
              Array [
                0,
                "auto",
              ]
            }
            height={0}
            hide={true}
            mirror={false}
            orientation="left"
            padding={
              Object {
                "bottom": 0,
                "top": 0,
              }
            }
            reversed={false}
            scale="auto"
            tickCount={5}
            type="category"
            width={60}
            yAxisId={0}
          />
          <Bar
            animationBegin={0}
            animationDuration={400}
            animationEasing="ease"
            background={
              Object {
                "fill": "#adafb0",
                "fillOpacity": 0.4,
              }
            }
            barSize={-10}
            data={Array []}
            dataKey="votePercentage"
            hide={false}
            isAnimationActive={true}
            layout="vertical"
            legendType="rect"
            minPointSize={0}
            onAnimationEnd={[Function]}
            onAnimationStart={[Function]}
            xAxisId={0}
            yAxisId={0}
          >
            <LabelList
              content={[Function]}
              dataKey="votePercentage"
              position="insideRight"
              valueAccessor={[Function]}
            />
            <LabelList
              content={[Function]}
              dataKey="player"
              position="insideRight"
              valueAccessor={[Function]}
            />
            <LabelList
              content={[Function]}
              dataKey="imageThumb"
              position="left"
              valueAccessor={[Function]}
            />
            <Cell
              fill="#000000"
            />
            <Cell
              fill="#000000"
            />
            <Cell
              fill="#000000"
            />
          </Bar>
        </BarChart>,
        "debounce": 0,
        "height": "100%",
        "width": "100%",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "barCategoryGap": "10%",
          "barGap": 10,
          "children": Array [
            <XAxis
              allowDataOverflow={false}
              allowDecimals={true}
              allowDuplicatedCategory={true}
              axisLine={false}
              domain={
                Array [
                  0,
                  100,
                ]
              }
              height={30}
              hide={true}
              mirror={false}
              orientation="bottom"
              padding={
                Object {
                  "left": 0,
                  "right": 0,
                }
              }
              reversed={false}
              scale="auto"
              tickCount={5}
              type="number"
              width={0}
              xAxisId={0}
            />,
            <YAxis
              allowDataOverflow={false}
              allowDecimals={true}
              allowDuplicatedCategory={true}
              dataKey="player"
              domain={
                Array [
                  0,
                  "auto",
                ]
              }
              height={0}
              hide={true}
              mirror={false}
              orientation="left"
              padding={
                Object {
                  "bottom": 0,
                  "top": 0,
                }
              }
              reversed={false}
              scale="auto"
              tickCount={5}
              type="category"
              width={60}
              yAxisId={0}
            />,
            <Bar
              animationBegin={0}
              animationDuration={400}
              animationEasing="ease"
              background={
                Object {
                  "fill": "#adafb0",
                  "fillOpacity": 0.4,
                }
              }
              barSize={-10}
              data={Array []}
              dataKey="votePercentage"
              hide={false}
              isAnimationActive={true}
              layout="vertical"
              legendType="rect"
              minPointSize={0}
              onAnimationEnd={[Function]}
              onAnimationStart={[Function]}
              xAxisId={0}
              yAxisId={0}
            >
              <LabelList
                content={[Function]}
                dataKey="votePercentage"
                position="insideRight"
                valueAccessor={[Function]}
              />
              <LabelList
                content={[Function]}
                dataKey="player"
                position="insideRight"
                valueAccessor={[Function]}
              />
              <LabelList
                content={[Function]}
                dataKey="imageThumb"
                position="left"
                valueAccessor={[Function]}
              />
              <Cell
                fill="#000000"
              />
              <Cell
                fill="#000000"
              />
              <Cell
                fill="#000000"
              />
            </Bar>,
          ],
          "data": Array [
            Object {
              "imageThumb": "handsome.jpg",
              "noVoteCount": 0,
              "player": "Cameron Small",
              "voteCount": 50,
              "votePercent": 80,
            },
            Object {
              "imageThumb": "hot.jpg",
              "noVoteCount": 0,
              "player": "Laura Kingston",
              "voteCount": 10,
              "votePercent": 10,
            },
            Object {
              "imageThumb": "ironman.gif",
              "noVoteCount": 0,
              "player": "Maramead",
              "voteCount": 11,
              "votePercent": 10,
            },
          ],
          "layout": "vertical",
          "margin": Object {
            "left": -5,
          },
          "reverseStackOrder": false,
          "stackOffset": "none",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowDataOverflow": false,
              "allowDecimals": true,
              "allowDuplicatedCategory": true,
              "axisLine": false,
              "domain": Array [
                0,
                100,
              ],
              "height": 30,
              "hide": true,
              "mirror": false,
              "orientation": "bottom",
              "padding": Object {
                "left": 0,
                "right": 0,
              },
              "reversed": false,
              "scale": "auto",
              "tickCount": 5,
              "type": "number",
              "width": 0,
              "xAxisId": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowDataOverflow": false,
              "allowDecimals": true,
              "allowDuplicatedCategory": true,
              "dataKey": "player",
              "domain": Array [
                0,
                "auto",
              ],
              "height": 0,
              "hide": true,
              "mirror": false,
              "orientation": "left",
              "padding": Object {
                "bottom": 0,
                "top": 0,
              },
              "reversed": false,
              "scale": "auto",
              "tickCount": 5,
              "type": "category",
              "width": 60,
              "yAxisId": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "animationBegin": 0,
              "animationDuration": 400,
              "animationEasing": "ease",
              "background": Object {
                "fill": "#adafb0",
                "fillOpacity": 0.4,
              },
              "barSize": -10,
              "children": Array [
                <LabelList
                  content={[Function]}
                  dataKey="votePercentage"
                  position="insideRight"
                  valueAccessor={[Function]}
                />,
                <LabelList
                  content={[Function]}
                  dataKey="player"
                  position="insideRight"
                  valueAccessor={[Function]}
                />,
                <LabelList
                  content={[Function]}
                  dataKey="imageThumb"
                  position="left"
                  valueAccessor={[Function]}
                />,
                Array [
                  <Cell
                    fill="#000000"
                  />,
                  <Cell
                    fill="#000000"
                  />,
                  <Cell
                    fill="#000000"
                  />,
                ],
              ],
              "data": Array [],
              "dataKey": "votePercentage",
              "hide": false,
              "isAnimationActive": true,
              "layout": "vertical",
              "legendType": "rect",
              "minPointSize": 0,
              "onAnimationEnd": [Function],
              "onAnimationStart": [Function],
              "xAxisId": 0,
              "yAxisId": 0,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "content": [Function],
                  "dataKey": "votePercentage",
                  "position": "insideRight",
                  "valueAccessor": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "content": [Function],
                  "dataKey": "player",
                  "position": "insideRight",
                  "valueAccessor": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "content": [Function],
                  "dataKey": "imageThumb",
                  "position": "left",
                  "valueAccessor": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "0",
                "nodeType": "function",
                "props": Object {
                  "fill": "#000000",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "function",
                "props": Object {
                  "fill": "#000000",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "function",
                "props": Object {
                  "fill": "#000000",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
