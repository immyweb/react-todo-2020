// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CarouselNav /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CarouselNav
    colour="#000000"
    direction="PREV"
    handleNavClick={[Function]}
    onClick={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Icon
        iconColour="#000000"
        iconName="chevron-solid-left"
        iconSize={18}
      />,
      "direction": "PREV",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "iconColour": "#000000",
        "iconName": "chevron-solid-left",
        "iconSize": 18,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Icon
          iconColour="#000000"
          iconName="chevron-solid-left"
          iconSize={18}
        />,
        "direction": "PREV",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "iconColour": "#000000",
          "iconName": "chevron-solid-left",
          "iconSize": 18,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
